version: '3.7'

services:
  redis:
    image: redis
    volumes:
      - ${STORAGE}/redis:/data
    networks:
      - internal

  elasticsearch:
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
    volumes:
      - ${STORAGE}/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - internal

  mariadb:
    image: mariadb
    environment:
      MYSQL_DATABASE: ${SERVICE}_${RAILS_ENV}
      MYSQL_USER: ${SERVICE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${STORAGE}/mariadb:/var/lib/mysql
    networks:
      - internal

  api_ubs: &ror
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RAILS_ENV: ${RAILS_ENV}
    depends_on:
      - mariadb
      - redis
      - elasticsearch
    environment:
      RAILS_ENV: ${RAILS_ENV}
      RAILS_LOG_TO_STDOUT: 'yes'
      REDIS_HOST: redis
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_URL: http://elasticsearch:9200
      MYSQL_HOST: mariadb
      MYSQL_DATABASE: ${SERVICE}_${RAILS_ENV}
      MYSQL_USER: ${SERVICE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - internal

  sidekiq:
    <<: *ror
    command: bin/bundle exec sidekiq -C config/sidekiq.yml -e ${RAILS_ENV}
    networks:
      - internal

networks:
  internal:
    name: ${SERVICE}
